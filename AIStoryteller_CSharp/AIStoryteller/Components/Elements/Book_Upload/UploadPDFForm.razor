@using AIStoryteller_Repository.Services
@using AIStoryteller.Components.Elements
@using AIStoryteller_Repository.Constants
@using AIStoryteller_Repository.Payload.Request
@using AIStoryteller_Repository.Payload.Response
@using Microsoft.AspNetCore.SignalR.Client
@using Microsoft.AspNetCore.Http.Connections
@using AIStoryteller.Utils
@inject NavigationManager Navigation
@rendermode InteractiveServer



<form class="needs-validation" novalidate>
    @*@if (_selectedFile == null)
    {*@
        <label for="input-file" id="drop-area">
            <InputFile accept="pdf/*" id="input-file" OnChange="OnBookChange" aria-describedby="uploadButton" hidden />
            <div id="pdf-view" ondragover="event.preventDefault()">
                <img src="favicon.png" />
                <p class="mt-2">Drag and drop, or click here <br /> to upload the PDF file.</p>
            </div>
        </label>
    @*}*@
    @*else
    {
        <label class="d-block" id="drop-area" style="background-image: url('https://i.pinimg.com/564x/e3/2a/af/e32aaf37ee2f4ff6ff86cc94a959f494.jpg'); background-size: cover; background-position: center;">
            <InputFile accept="pdf/*" id="input-file" OnChange="OnBookChange" aria-describedby="uploadButton" hidden />
        </label>
    }*@


</form>



@code{
    private IBrowserFile _selectedFile;
    private byte[] _pdfFileByteArray;
    private string ThumbnailImg;

    public async Task<byte[]> GetAddedBook()
    {
        if (_selectedFile == null) return null;
        var result = await FileConvertUtils.ConvertIBrowserFileToByteArray(_selectedFile);
        return result;

    }
    private async Task OnBookDragOver()
    {

    }
    private async Task OnBookChange(InputFileChangeEventArgs e)
    {
        _selectedFile = e.GetMultipleFiles()[0];

    }
}

